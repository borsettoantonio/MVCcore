@model CourseListViewModel

<div class="row">
    <div class="col-md-8">
        <h1>
            @ViewData["Title"]
        </h1>

    </div>
    <div class="col-md-4 d-flex align-items-center">
        <form asp-controller="Courses" asp-action="Index" method="get">
            @Html.HiddenFor(model => model.Input.Stato)
            <div class="input-group margin-bottom-sm">
                <input type="text" name="search" class="form-control" placeholder="Cerca..." aria-label="Cerca..."
                    value="@Model.Input.Search" aria-describedby="search-button">
                <div class="input-group-append input-group-text">
                    <button id="search-button"><i class="fas fa-search"></i></button>
                </div>
            </div>
        </form>
    </div>
</div>

<!--
    Prova di lettura di un parametro hidden
    e costruzione di un link con i dati del parametro

<script type="application/javascript">
    function f2() {
        var s = document.getElementsByName("Input.Stato")[0].value;
        return "localhost:5180/Courses?pippo=" + s + "&search=chitarra";

    }

</script>

<script type="application/javascript">
var stringa = "Visita";
document.write(stringa.link("/Courses?pippo=1"));
</script>

<script type="application/javascript">
function f3()
{
   location.href=f2();
}
</script>

<br/>
<a href="javascript:f2()">ciao</a>
<br/>
<a href="javascript:;" onclick="f3();">Link</a>
<br/>
-->

<div class="row">
    <div class="col-md-1"></div>
    <div class="col-md-5"><a asp-route-orderby="Title"
            asp-route-ascending="@(Model.Input.OrderBy == "Title" ? !Model.Input.Ascending : true)"
            asp-route-Input.Stato="@Model.Input.Stato">Titolo @if (Model.Input.OrderBy == "Title")
            {
                <i class="fas fa-caret-@(Model.Input.Ascending ? "up" : "down")"></i>
            }</a> </div>
    <div class="col-md-2"><a asp-route-orderby="Rating"
            asp-route-ascending="@(Model.Input.OrderBy == "Rating" ? !Model.Input.Ascending : true)"
            asp-route-Input.Stato="@Model.Input.Stato">Valutazione @if (Model.Input.OrderBy == "Rating")
            {
                <i class="fas fa-caret-@(Model.Input.Ascending ? "up" : "down")"></i>
            }</a></div>
    <div class="col-md-2"><a asp-route-orderby="CurrentPrice"
            asp-route-ascending="@(Model.Input.OrderBy == "CurrentPrice" ? !Model.Input.Ascending : true)"
            asp-route-Input.Stato="@Model.Input.Stato">Prezzo @if (Model.Input.OrderBy == "CurrentPrice")
            {
                <i class="fas fa-caret-@(Model.Input.Ascending ? "up" : "down")"></i>
            }</a></div>
    <div class="col-md-2"></div>
</div>

@foreach (CourseViewModel course in Model.Courses.Results)
{
    <hr>
    <div class="row course">
        <div class="col-md-1">
            <img src="@course.ImagePath" width="52" height="52" />
        </div>

        <div class="col-md-5">
            <h2>@course.Title</h2>
            <author>di @course.Author</author>
        </div>

        <div class="col-md-2 rating" title="@course.Rating">
            @for (int i = 1; i < 5; i++)
            {
                if (course.Rating >= i)
                {
                    <i class="fas fa-star"></i>
                }
                else if (course.Rating > i - 1)
                {
                    <i class="fas fa-star-half-alt"></i>
                }
                else
                {
                    <i class="far fa-star"></i>
                }
            }

        </div>

        <div class="col-md-2 price">
            @course.CurrentPrice
            @if (!course.CurrentPrice!.Equals(course.FullPrice))
            {
                <br />
                <s>@course.FullPrice</s>
            }
        </div>

        <div class="col-md-2 d-flex align-items-center">
            <a class="btn btn-outline-primary" asp-action="Detail" asp-route-id="@course.Id">Dettaglio corso @course.Id</a>
        </div>

        <div style="height: 30px;"></div>
    </div>
}

@{
    int totalPages = (int)Math.Ceiling(Model.Courses.TotalCount / (double)Model.Input.Limit);
    int currentPage = Model.Input.Page;
}
<nav aria-label="Paginazione">
    <ul class="pagination d-flex justify-content-center mt-3">
        @if (currentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" asp-route-page="@(currentPage-1)" asp-route-Input.Stato="@Model.Input.Stato"><i class=  "fas fa-angle-left"></i></a>
            </li>
        }
        @for (int p = Math.Max(1, currentPage - 4); p <= Math.Min(totalPages, currentPage + 4); p++)
        {
            if (p == currentPage)
            {
                <li class="page-item active" aria-current="page">
                    <a class="page-link" asp-route-page="@p" asp-route-Input.Stato="@Model.Input.Stato">@p<span
                            class="sr-only">(current)</span></a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-route-page="@p" asp-route-Input.Stato="@Model.Input.Stato">@p</a>
                </li>
            }
        }
        @if (currentPage < totalPages)
        {
            <li class="page-item">
                <a class="page-link" asp-route-page="@(currentPage+1)" asp-route-Input.Stato="@Model.Input.Stato"><i class= "fas fa-angle-right"></i></a>
            </li>
        }
    </ul>
</nav>

